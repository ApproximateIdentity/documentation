Packaging
---------

This is a basic summary of how to build a debian package from a python program.
See `Extra Resources` below for links to more information.

The python package should be designed as is commonly done within the python
world. I.e. it should be installable using setuptools. To turn such a program
into a debian package, you need to have the following debian packages
installed:

    * devscripts
    * python-all-dev
    * python-stdeb

To create the package, you need a source distributation from the python
program. This can usually be generated by running the following in the root of
the source:

	$ python setup.py sdist

This should produce a file approximating the following:

    sdist/package-x.y.tar.gz

To convert this into the debian package, execute the following:

	$ py2dsc -m 'First Last <handle@domain.com>' dist/package-x.y.tar.gz

This will create a new folder deb_dist/ and some files inside. It is mostly
complete, but you will need to make some changes.

deb_dist/debian/control
-----------------------

    * If you do not provide a public python module, rename the application to
        remove the python- prefix.

    * Replace python-all with python in Build-Depends since we don't need all
        interpreters.

    * Add `X-Python-Version: >= 2.7` in source stanza (or whatever version
        you're working with).

    * Add any necessary package dependencies.

deb_dist/debian/rules
---------------------

    * Change the package name to reflect changes in deb_dist/debian/control.


There are other files you'd probably like to add (for example, a licence), but
this is currently a bare-bones description so I leave that off.

If everything went well, you should be able to build the package by running the
following inside the deb_dist/package-x.y/ directory:

    $ debuild -uc -us


Extra Resources
---------------

    * https://wiki.debian.org/IntroDebianPackaging
    * https://wiki.debian.org/Python/Packaging
